//****************重载运算符*************
//********重载限制**********
/*
1、重载后的运算符必须至少有一个操作数是用户自定义的
2、不能违反原来的句法规则
3、不能创建新的运算符
4、不能重载下列运算符
	sizeof、:、*、::、？：、typeid、const_cast、dynamic_cast、reinterpret_cast、satic_cast（强制类型转化符）；
5、下面的运算符只能通过成员函数重载
	=、()、[]、->
*/
//************友元******************
/*
在重载二元运算符时用到，在类声明中需要声明
创建关键符：friend
cout<<x<<y:cout是ostream类的一个对象，而运算符<<的参数是ostream的对象引用，返回值也是对象（的引用），即返回值仍为ostream
	因此cout<<x返回一个ostream对象cout引用，故可以用（cout<<x）<<y
友元在定义时不需要再用friend
*/
/*
一个矢量类：
srand(time(0)):随机数种子
定义类特定的常量可以采用
	enum{a=14};
	static const int a=14;
类中定义的枚举变量可以通过：：直接使用
*/
/*
强制类型转换符号重载：
operator typename();可隐式可显式
explicit operator typename();只能显式
int Stonewt::Stone_to_int(){return int(pounds+0.5)}只能显式
将加法定义为友元更容易适应类型转换，避免二义性
*/

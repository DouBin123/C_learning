//OOP特性
/*
1、抽象
2、封装和数据隐藏
3、多态
4、继承
5、代码的可重用性
*/
//类方法可以访问private组件
//定义成员函数时，使用作用域解析运算符::标识函数所属的类
//类与结构体有很大的类型性，不过结构体默认访问是public，而类是private
//客户/服务器模型只允许修改类设计的实现细则，不能修改接口
//********************类的构造函数与解析函数************
/*
构造函数与构析函数没有返回值
类的数据隐藏特性，使得其初始化与结构不同
构造函数（函数名一般为类名）的参数不是类的成员，而是类成员要赋的值，因此，参数名不能与类成员名相同。
一种常见的做法是使用m_前缀或_后缀。
隐式调用构造函数创建对象：Stock garment("anm",20,23)====》Stock garment=stock("anm",20,23)
对象生成在构造函数之后，所以不能通过对象来调用。
默认构造函数是在未提供显式初始值时，用来创建对象的构造函数。
	定义默认构造函数的方式：
					1、为已经创建的构造函数参数提供默认值
					2、通过函数重载定义（无参数）
析构函数：对象过期时用于清理new产生的内存
*/
//C++11支持列表形式初始化类
//*******************this指针*****************
//方法涉及两个对象
//this指针用来指向调用函数的对象（this指针被作为隐藏参数传递给方法）
//每个成员函数都可以有this指针
//***************对象数组****************
//利用默认构造函数声明对象数组，不用初始化定义
//利用一般构造函数直接创建和初始化对象数组
//****************类作用域**************
/*
访问类的成员必须通过对象借助（.）,(::),(->)来访问
为了使枚举中的枚举量不冲突，可以使用作用域内枚举
	enum class(struct) egg{small,big};enum class(struct) pal{small,mid};
	枚举底层类型改变：enum class:short pizza{small,mid,big};
*/
//****************************抽象数据类型(ADT)************************
/*
栈的操作：
1、可以创建空栈
2、可将数据项添加到堆顶（压入）
3、可从栈顶删除数据项（弹出）
4、可查看栈是否填满
5、可查看栈是否为空
*/
